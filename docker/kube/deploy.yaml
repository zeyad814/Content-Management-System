apiVersion: v1
kind: ConfigMap
metadata:
  name: php-config-dash-peterayoub-me
  namespace: dashboard-namespace
data:
  custom-php.ini: |
    post_max_size = 10000M
    upload_max_filesize = 5000M
    max_execution_time = 24000
    memory_limit = 5120M
    max_input_time = 24000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-file-dash-peterayoub-me
  namespace: dashboard-namespace
data:
  maintenance.html: |
      <!DOCTYPE html>
      <html lang="en">
      <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Noto+Kufi+Arabic:wght@100..900&family=Zain:wght@200;300;400;700;800;900&display=swap" rel="stylesheet"><title>تحت الصيانة</title>
          <style>body {display: flex;justify-content: center;align-items: center;height: 100vh;margin: 0;font-family: Arial, sans-serif;background-color: #fff;color: #333;}.container {text-align: center;padding: 20px;}h1 {font-size: 2em;margin-bottom: 0.5em;}p {font-size: 1.2em;}*{direction: rtl;font-family: "Noto Kufi Arabic", sans-serif;font-optical-sizing: auto;font-weight: normal;}</style>
      </head>
      <body style=""><div class="container"><img src="https://i.ibb.co/tBgVwSz/light-bulb-1.png" style="width:200px;max-width: 80%;"><h1>لحظة من فضلك !</h1><p>موقعنا تحت الصيانة بشكل مؤقت حالياً وسنعود في خلال لحظات</p></div>
      </body>
      </html>
  site.conf: |
      log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                      'Headers: $http_user_agent, $http_cookie, $http_referer, $http_x_forwarded_for, $http_host';

      gzip on;
      gzip_disable "msie6";
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

      client_body_buffer_size 10K;
      client_max_body_size 20000M;
      client_header_buffer_size 1k;
      large_client_header_buffers 4 4k;


      server {  
       listen 80; 
       listen 443;
       #access_log off;
       client_max_body_size 20000M;
       server_name _ dash.peterayoub.me www.dash.peterayoub.me; 
       root /var/www/html/site/public;  
       index index.php index.html index.htm index.nginx-debian.html;
       proxy_cache_valid 200 365d;
       charset utf-8; 


       set_real_ip_from 0.0.0.0/0;
       real_ip_header X-Forwarded-For;
       real_ip_recursive on;

       error_page 404 403 500 502 503 504 /maintenance.html;
       location = /maintenance.html {
          root /usr/share/nginx/html;
          index index.html;
          #internal;
       }

       location /health-check-nginx {
            return 200 'Healthy';
            add_header Content-Type text/plain;
        }
       if (!-d $request_filename) {
            rewrite ^/(.+)/$ /$1 permanent;
       }
       if ($request_uri ~* //) {
            rewrite ^/(.*) /$1 permanent;
       }
       location ~ \.(env|log|htaccess)$ {
            deny all;
       } 
   
       #access_log off;  
       error_log /var/log/nginx/error.log error;  

       sendfile off;  


        location ~ /.well-known/acme-challenge {
            root /var/www/certbot;
            allow all;
        }

        if ($request_uri ~* "^(.*/)index\.php(/?)(.*)") {
              return 301 $1$3;
        }

        #proxy_pass_request_headers on;
        #proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Real-IP $remote_addr;
        #proxy_set_header Host $host;
            
       location ~*\.(?:js|jpg|jpeg|gif|png|css|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|rtf|swf|ico|flv|txt|woff|woff2|svg|mp3|jpe?g,eot|ttf|svg)$ {
          access_log off;
          expires 360d;
          add_header Access-Control-Allow-Origin *;
          add_header Pragma public;
          add_header Cache-Control "public";
          add_header Vary Accept-Encoding; 
          try_files $uri $uri/ /index.php?$query_string;
       }

       location / {
            if ($host ~* ^www\.(.*)$) {
                return 301 $scheme://$1$request_uri;
            }
            
            add_header Access-Control-Allow-Origin *;
            try_files $uri $uri/ /index.php?$query_string;
       }

       location ~ \.php$ {

            

            if ($host ~* ^www\.(.*)$) {
                return 301 $scheme://$1$request_uri;
            }


            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php-service-dash-peterayoub-me:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTPS on;
          
            fastcgi_read_timeout 8600;
            fastcgi_intercept_errors off;  
            fastcgi_buffer_size 16k;  
            fastcgi_buffers 4 16k; 
       }  

       location ~ /.ht {  
        deny all;  
       }
      }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-controller-dash-peterayoub-me
  namespace: dashboard-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-basic-dash-peterayoub-me
  template:
    metadata:
      labels:
        app: nginx-basic-dash-peterayoub-me
    spec:
      containers:
      - name: nginx-container-dash-peterayoub-me
        image: petertharwat/nginx-1.27-github:v1.0.9
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "200m"
            memory: "200Mi"
        livenessProbe:
          httpGet:
            path: /health-check-nginx
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health-check-nginx
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        env:
          - name: REPO_URL
            valueFrom:
              configMapKeyRef:
                name: laravel-env-dash-peterayoub-me
                key: REPO_URL

          - name: DOMAIN_NAME
            value: "dash.peterayoub.me"
          - name: PHP_SERVICE_NAME
            value: php-service-dash-peterayoub-me
          - name: PHP_SERVICE_PORT
            value: "9000"
          - name: ENABLE_SSL_PASSTHROUGH
            value: "true"

        ports:
          - containerPort: 80
            name: http
          - containerPort: 443
            name: https
        #command: ["/bin/bash","-c"]
        #args: ["/docker-entrypoint.sh"]
        volumeMounts:
          - name: nginx-config-file-dash-peterayoub-me
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: site.conf

          - name: nginx-config-file-dash-peterayoub-me
            mountPath: /usr/share/nginx/html/maintenance.html
            subPath: maintenance.html

      volumes:
        - name: nginx-config-file-dash-peterayoub-me
          configMap:
           name: nginx-config-file-dash-peterayoub-me
           items:
           - key: site.conf
             path: site.conf

           - key: maintenance.html
             path: maintenance.html

        - name: laravel-env-dash-peterayoub-me
          configMap:
            name: laravel-env-dash-peterayoub-me
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa-dash-peterayoub-me
  namespace: dashboard-namespace
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-controller-dash-peterayoub-me
  minReplicas: 1
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 100
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      selectPolicy: Max
      policies:
        - type: Percent
          value: 50
          periodSeconds: 10
        - type: Pods
          value: 1
          periodSeconds: 10
    scaleUp:
      stabilizationWindowSeconds: 20
      selectPolicy: Max
      policies:
        - type: Percent
          value: 50
          periodSeconds: 5
        - type: Pods
          value: 2
          periodSeconds: 5 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php-deployment-dash-peterayoub-me
  namespace: dashboard-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: php-basic-dash-peterayoub-me
  template:
    metadata:
      labels:
        app: php-basic-dash-peterayoub-me
    spec:
      containers:
        - name: php-fpm-container-dash-peterayoub-me
          image: petertharwat/php-fpm-8.3-github:v1.0.9
          resources:
            requests:
              cpu: "200m"
              memory: "200Mi"
            limits:
              cpu: "1200m"
              memory: "1200Mi"
          ports:
            - containerPort: 9000


          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - php /var/www/html/site/artisan db:show || exit 1
            initialDelaySeconds: 0
            periodSeconds: 7
            failureThreshold: 50
            timeoutSeconds: 5

          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - php /var/www/html/site/artisan list || exit 1
            initialDelaySeconds: 0
            periodSeconds: 7
            failureThreshold: 50
            timeoutSeconds: 5

          #startupProbe:
          #  exec:
          #    command:
          #    - /bin/sh
          #    - -c
          #    - php /var/www/html/artisan route:clear || exit 1
          #  initialDelaySeconds: 10
          #  periodSeconds: 5
          #  failureThreshold: 30

          env:
            - name: REPO_URL
              valueFrom:
                configMapKeyRef:
                  name: laravel-env-dash-peterayoub-me
                  key: REPO_URL

            - name: RUN_SHELL_AFTER_PULL
              value: "chown -R www-data:www-data /var/www/html/site && chmod 777 -R /var/www/html/site && php /var/www/html/site/artisan optimize:clear"

          volumeMounts:
            - name: laravel-env-dash-peterayoub-me
              mountPath: /var/www/html/site/.env
              subPath: .env

            - name: php-config-dash-peterayoub-me
              mountPath: /usr/local/etc/php/conf.d/custom-php.ini
              subPath: custom-php.ini


            #- name: log-volume
            #  mountPath: /var/log

      volumes:
        - name: laravel-env-dash-peterayoub-me
          configMap:
            name: laravel-env-dash-peterayoub-me

        - name: php-config-dash-peterayoub-me
          configMap:
            name: php-config-dash-peterayoub-me
        #- name: log-volume
        #  emptyDir: {}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: php-hpa-dash-peterayoub-me
  namespace: dashboard-namespace
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: php-deployment-dash-peterayoub-me
  minReplicas: 1
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 100
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      selectPolicy: Max
      policies:
        - type: Percent
          value: 50
          periodSeconds: 10
        - type: Pods
          value: 1
          periodSeconds: 10
    scaleUp:
      stabilizationWindowSeconds: 20
      selectPolicy: Max
      policies:
        - type: Percent
          value: 100
          periodSeconds: 5
        - type: Pods
          value: 2
          periodSeconds: 5 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue-dash-peterayoub-me
  namespace: dashboard-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue-dash-peterayoub-me
  template:
    metadata:
      labels:
        app: queue-dash-peterayoub-me
    spec:
      containers:
        - name: queue-dash-peterayoub-me
          image: petertharwat/php-fpm-8.3-github:v1.0.9
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "1000m"
              memory: "1000Mi"
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - php /var/www/html/site/artisan db:show || exit 1
            initialDelaySeconds: 0
            periodSeconds: 7
            failureThreshold: 50
            timeoutSeconds: 5

          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - php /var/www/html/site/artisan list || exit 1
            initialDelaySeconds: 0
            periodSeconds: 7
            failureThreshold: 50
            timeoutSeconds: 5

          env:
            - name: CRON_SCHEDULE
              value: "* * * * *"  # This schedule runs every minute
            - name: CRON_SCRIPT_CONTENT
              value: "cd /var/www/html/site && /usr/local/bin/php artisan queue:restart && cd /var/www/html/site && /usr/local/bin/php artisan queue:work --tries=3"

            - name: REPO_URL
              valueFrom:
                configMapKeyRef:
                  name: laravel-env-dash-peterayoub-me
                  key: REPO_URL

          volumeMounts:
            - name: laravel-env-dash-peterayoub-me
              mountPath: /var/www/html/site/.env
              subPath: .env

            - name: php-config-dash-peterayoub-me
              mountPath: /usr/local/etc/php/conf.d/custom-php.ini
              subPath: custom-php.ini


      volumes:
        - name: laravel-env-dash-peterayoub-me
          configMap:
            name: laravel-env-dash-peterayoub-me

        - name: php-config-dash-peterayoub-me
          configMap:
            name: php-config-dash-peterayoub-me
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedule-dash-peterayoub-me
  namespace: dashboard-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schedule-dash-peterayoub-me
  template:
    metadata:
      labels:
        app: schedule-dash-peterayoub-me
    spec:
      containers:
        - name: schedule-dash-peterayoub-me
          image: petertharwat/php-fpm-8.3-github:v1.0.9
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "1000m"
              memory: "1000Mi"
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - php /var/www/html/site/artisan db:show || exit 1
            initialDelaySeconds: 0
            periodSeconds: 7
            failureThreshold: 50
            timeoutSeconds: 5

          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - php /var/www/html/site/artisan list || exit 1
            initialDelaySeconds: 0
            periodSeconds: 7
            failureThreshold: 50
            timeoutSeconds: 5

          env:

            - name: CRON_SCHEDULE
              value: "* * * * *"  # This schedule runs every minute
            - name: CRON_SCRIPT_CONTENT
              value: "cd /var/www/html/site && /usr/local/bin/php artisan schedule:run"

            - name: REPO_URL
              valueFrom:
                configMapKeyRef:
                  name: laravel-env-dash-peterayoub-me
                  key: REPO_URL

          volumeMounts:
            - name: laravel-env-dash-peterayoub-me
              mountPath: /var/www/html/site/.env
              subPath: .env

            - name: php-config-dash-peterayoub-me
              mountPath: /usr/local/etc/php/conf.d/custom-php.ini
              subPath: custom-php.ini


      volumes:
        - name: laravel-env-dash-peterayoub-me
          configMap:
            name: laravel-env-dash-peterayoub-me

        - name: php-config-dash-peterayoub-me
          configMap:
            name: php-config-dash-peterayoub-me
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-dash-peterayoub-me
  namespace: dashboard-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-dash-peterayoub-me
  template:
    metadata:
      labels:
        app: redis-dash-peterayoub-me
    spec:
      containers:
      - name: redis-dash-peterayoub-me
        image: redis:6.2
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "1000m"
            memory: "1000Mi"
        ports:
        - containerPort: 6379
